name: Create release

# Creating maven and github release

on:
  workflow_dispatch:
    inputs:
      release-version: # id of input
        description: "override default release version e.g. with 0.1.0-1"
        required: false

permissions:
  contents: write

env:
  RELEASE_VERSION: ${{ github.event.inputs.release-version }}
  IMAGE_NAME: ai-cockpit-action-demo
  DOCKERHUB_USERNAME: starwit
  DOCKERHUB_ORG: starwitorg  

jobs:
  build:
    name: "Creating Docker image and github release"
    runs-on: [self-hosted, linux, X64]
    outputs:
      VERSION_BUILD: ${{ steps.get-version.outputs.VERSION_BUILD }}     
    
    steps:
    - name: Install GH CLI
      uses: dev-hanz-ops/install-gh-cli-action@v0.2.0

    - name: 'Setup yq'
      uses: dcarbone/install-yq-action@v1

    - name: get helm
      uses: azure/setup-helm@v4

    - name: login to Helm registry
      run: helm registry login registry-1.docker.io -u starwit -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: adapt versions in Helm chart
      working-directory: helm/ai-cockpit-action-demo
      run: |
        yq --version
        echo "changing versions in chart.yaml"
        yq -i '.version="${{ env.RELEASE_VERSION }}"' Chart.yaml
        yq -i '.appVersion="${{ env.RELEASE_VERSION }}"' Chart.yaml

    - name: Commit and push tag
      run: |
        git config --global user.email "code@starwit.de"
        git config --global user.name "Starwit"
        git tag ${{ env.RELEASE_VERSION }}
        echo "pushing tag ${{ env.RELEASE_VERSION }}"
        git push origin tag ${{ env.RELEASE_VERSION }}
      env:
         CI: false

    - name: Create github release
      run: gh release create ${{ env.RELEASE_VERSION }} -F CHANGELOG.md
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout tag
      run: |
        git checkout ${{ env.RELEASE_VERSION }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.DOCKERHUB_ORG }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}

    - name: run helm update
      working-directory: helm/ai-cockpit-action-demo
      run: helm dep update

    - name: run helm package
      working-directory: helm
      run: helm package ai-cockpit-action-demo

    - name: get version number
      working-directory: helm/ai-cockpit-action-demo
      run: |
        echo "HELM_VERSION=$(grep version: Chart.yaml | head -1 | awk '{print $2}')" >> $GITHUB_ENV

    - name: run helm push
      working-directory: helm
      run: helm push ${{ env.IMAGE_NAME }}-chart-${{ env.HELM_VERSION }}.tgz oci://registry-1.docker.io/starwitorg
