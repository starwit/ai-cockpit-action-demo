name: Create release

# Creating maven and github release

on:
  workflow_dispatch:
    inputs:
      release-version: # id of input
        description: "override default release version e.g. with 0.1.0-1"
        required: false

permissions:
  contents: write

env:
  RELEASE_VERSION: ${{ github.event.inputs.release-version }}
  IMAGE_NAME: ai_cockpit_action_demo
  DOCKERHUB_USERNAME: starwit
  DOCKERHUB_ORG: starwitorg  

jobs:
  build:
    name: "Creating Docker image and github release"
    runs-on: [self-hosted, linux, X64]
    outputs:
      VERSION_BUILD: ${{ steps.get-version.outputs.VERSION_BUILD }}     
    
    steps:
    - name: Install GH CLI
      uses: dev-hanz-ops/install-gh-cli-action@v0.2.0

    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Commit and push tag
      run: |
        git config --global user.email "code@starwit.de"
        git config --global user.name "Starwit"
        git add .
        modifications=$(git status | grep "modified" || true)
        if [ ! -z "$modifications" ]
        then
          echo "modifications found: $modifications"
          git commit -m "Bumping version to ${{ env.RELEASE_VERSION }}"
          git push
        fi
      env:
         CI: false
         
    - name: Get tag name
      run: |
        echo "TAG=$( git describe --abbrev=0 )" >> $GITHUB_ENV

    - name: Create github release
      run: gh release create ${{ env.TAG }} -F CHANGELOG.md
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout tag
      run: |
        git checkout ${{ env.TAG }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.DOCKERHUB_ORG }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
